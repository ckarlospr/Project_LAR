<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnWhatsappAI.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1
        MAAA6mAAADqYAAAXb5JfxUYAAAAJcEhZcwAACxIAAAsSAdLdfvwAAAWeSURBVEhLlVVpTFRXGJ026Y8m
        jWmTpk1MbVq3pIhaLZZVNhEEhkUYWWTYhFikpo0aTdVajKmW1nRzTdPGWE2qsTFBlmEUKPswMCyDIgjI
        Oiwj6wCzvTcz7/S7jxFLbWl6Jif33e9+95z77r3vG8l/4cmTJ6t4nj/icDhq4YBBEASr3W7vo/41o9EY
        3tjY+JIz9f/BYrGEkFAhCZqwBASH8Nhms52am5t7wzl1aUxMTCyjCT+RsMAEzLBAY2jGjZHbuND/M37o
        u4xfdNdQPFaKfsugaMJARl1WqynSKfPPGB8fX06rrmITbPTL0ytwsP04ErSZiNOmI67lr9yD9NaPcbb3
        PDqN3fMmgsDTm+9zyi1GW1vbK0/FRyyjyOnMRWxzKuJJSN76ETFrnlon6Xm3dq+Yk6LNRoFe+dREMJvN
        cqfsM9C2nJsX1+PTtqPY2ZiMmKZURFOb0JyJ3S17/5VxzRmIpdxbw3miCV0Aw+TkpKtTWiKZnZ31pqCD
        c/D4vOMMIjVJZJCCgw9P4OvH55DUnIW4pj2IJ6HFzFx4ljWlI6YxFbWT9aIJ7UZeTk7Oi6IBdX5nwfxR
        JcLrExGtScEhEp/hZ8Xki71XIG3YDVlj+pKM0siR1XoYs3Yj2yqHyWTykAwPD7/O7rdV4LBPexjS+iSE
        qxNRMV4rijN0znZD1kACDcmIbkhZkqHqeBSNlojzaNu/krADYZ2W6QcIVSVAqk6iNhFdc71i0lMcav0C
        O1TxiFDLiUnO9nnuUMXh2MPT4hzamXIJfaU3WOe3wdvYVhOLsLpEBFFbOaYSkxjuT7VjlyoDIWTAxp8j
        LUgkPYeQgVyTDaPDJH6E7PZomch3XZfhX70TwbVxCKD22IMzojjDN+0X4VEehhAaY+NLMahGhog6OQYs
        OnYO4+yAO5hI7qPz8KmMRGC1jBgL/8qdKNNXiwb9Rh1kdZnwrJA6x2Xwr4qBO5n6VkUvxNi8gOoYhNQk
        oMfUzwymJDzHlTKRC91XaJVS+JEwo1dFBKJq0jBoGhZNtNNtiK5Nw+ay7fAsD0dAlQwH6FyCqxMoFgyf
        ikhxnk9FFKS1ydDz42yLdBKqiDlMoGioBG4ssTwC3kTWupUGI6PhAKasBtFk0DQkbp1veRSu9t0UY910
        GXI7ziOwUgYvWuCHf4QipX4/XUwH7Ly9SaLX6zeQk2PINIrAilhsKQ2FR1m4k2HYcDcQGfUHoTOOiIIM
        fXOD7PWdvXlkaz7DppLt2HgvEGc7LokxqkvXJNS+wFv5FhY43poLVxJ0KwldxHXF/girkOPOoBKcnWep
        izBhnUJ4uZwWEwT3UinaDfPFz2AwJIpfMpWKLHoL4dF0N7aWRWMjJW66t30RXYr94FLki13Ve3Hp0VU0
        T9xH7+wAqvRqJNfsxzpFANYqvHG67UdRnOf4rr6WvldFg7Gxsc2CzeEYmhuBX1kMrTgAG5TbFnGjMgjr
        lYFYU+SNVfkecC0MgKdSCpcCX6wp8MLKQg8k1GZj2jJ/XlNTU6miOAPVjP0sWKgrwbsFHiLfzt+CVQWe
        cFH4i6v7O99T+GFtkQ8Z+mBFvhvia7KgowUymIzG6wuFjoHjOLHOfqI5gdUF3oisTMOR5i8RVZkuTn7r
        zgd4J9+dDL2wutAbK8l4BS1gOcVdFYE4qf0WM9b5wkil565CoVjmlJZIVCrVy5yVGxQgQKkrR8tEG+z0
        YzDyJtzsyUNG3SH4l8rwfnEw1hdtg/tdKSIr0nCq9Xu0TjwUcxnoyl9Xq9XPxBlor7Y6xxdg52z9FpOp
        RuDtFmcIBn4G3TO96Jjugs707Moy2Di+Y2ZmZo9TcjEsZvMtKhc9ZqPxjtloPkp/+kH6np432djIyIgb
        x1lO0hveE3hHp2ATxgS7MEmtzsHZNVaL5Ve6ikkDAwOviWLPQSL5Ex4q46BHY+dpAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEACABoBQAAFgAAACgAAAAQAAAAIAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAZ6xsAGmubQBrr3AAbbByAG+ydABys3cAc7R4AHS0eQDCg1EAw4VTAMaFVADFiVsAxIpdAMiJ
        WQDKjV0AzpFiANGVZwDRlmkA1JpuANSccwDPoHsA16B0ANihdgDZo3kA3KV8AN2ofwA6fP8APH7/AEGD
        /wBGiv8ATI//AFGT/wBTlP8AVpf/AFeY/wBZmf8AW5z/AF2e/wBTpv8AWar/AGKh/wBko/8AYK//AGey
        /wBst/8AcLj/AHS6/wB4vP8A36mBAN+zkQDgq4MA4a2GAOOwiwDksYsA5bOOAOa0jwDntpIA4bWUAOm5
        lgDru5kA67yaAOu9nADsvp0AjdKUAJPUmgDpwqUA78SnAOjDqADpxaoA6cesAOnIrgDwxqsA6cuxAOrM
        sgDpzbUA6s+5AOvQuQDr0r0A6tbIAOvYywDr2cwA7NnNAPDi2ADx5NsA8ubdAPTq4gD27eYA9/DqAPjy
        7gD58/AA+vTxAPv39AD///8A1P/RAP///wAAAAAAFC8AACJQAAAwcAAAPZAAAEywAABZzwAAZ/AAAHj/
        EQCK/zEAnP9RAK7/cQDA/5EA0v+xAOT/0QD///8AAAAAACYvAABAUAAAWnAAAHSQAACOsAAAqc8AAMLw
        AADR/xEA2P8xAN7/UQDj/3EA6f+RAO//sQD2/9EA////AAAAAAAvJgAAUEEAAHBbAACQdAAAsI4AAM+p
        AADwwwAA/9IRAP/YMQD/3VEA/+RxAP/qkQD/8LEA//bRAP///wAAAAAALxQAAFAiAABwMAAAkD4AALBN
        AADPWwAA8GkAAP95EQD/ijEA/51RAP+vcQD/wZEA/9KxAP/l0QD///8AAAAAAC8DAABQBAAAcAYAAJAJ
        AACwCgAAzwwAAPAOAAD/IBIA/z4xAP9cUQD/enEA/5eRAP+2sQD/1NEA////AAAAAAAvAA4AUAAXAHAA
        IQCQACsAsAA2AM8AQADwAEkA/xFaAP8xcAD/UYYA/3GcAP+RsgD/scgA/9HfAP///wAAAAAALwAgAFAA
        NgBwAEwAkABiALAAeADPAI4A8ACkAP8RswD/Mb4A/1HHAP9x0QD/kdwA/7HlAP/R8AD///8AAAAAACwA
        LwBLAFAAaQBwAIcAkAClALAAxADPAOEA8ADwEf8A8jH/APRR/wD2cf8A95H/APmx/wD70f8A////AAAA
        AAAbAC8ALQBQAD8AcABSAJAAYwCwAHYAzwCIAPAAmRH/AKYx/wC0Uf8AwnH/AM+R/wDcsf8A69H/AP//
        /wAAAAAACAAvAA4AUAAVAHAAGwCQACEAsAAmAM8ALADwAD4R/wBYMf8AcVH/AIxx/wCmkf8Av7H/ANrR
        /wD///8AAAAAAAAAAAAAAAAAAAAAAAAyFBEQDw4LCQkJCQkJFQAAFllYV1ZVVFNPVVtaWw0AABhZTl1O
        XU5dRlJUWlkNAAAaWk1NCAgITktbUVRbDAAAMVpLXQhBB11MXFpQVQ8AADRbSUoIBwZLBQQER08KAAA1
        W0ddR11JXQRAAl1UCwAAN1tFRUZGR0cDAgFLVQ4AADlcQl1EXUVdRl1HXVgPAAA7XCopKSkmJSQiISBc
        EAAAPVwqMC8uLSwrKCcbXBIAAD9cKikmJSMhHx4dHFwTAABDXFxcXFxcXFxcXFxcFwAAAEg/Pjw7OTg2
        NDMaGToAAAAAAAAAAAAAAAAAAAAAAP//AACAAQAAgAEAAIABAACAAQAAgAEAAIABAACAAQAAgAEAAIAB
        AACAAQAAgAEAAIABAACAAQAAwAEAAP//AAA=
</value>
  </data>
</root>