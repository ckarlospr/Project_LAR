<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnModificar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEACABoBQAAFgAAACgAAAAQAAAAIAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAGGo2AB9uPAAhbz4AI3FAADB6SwA+iE0AJ4tSACyOVgBFiF4ATZdQAFCaVABWnloAWKBcAE6N
        ZQBdl3IAXKJgAF+rZABdoGoAYKVlAGCjbgBlqmkAaq1uAG+ifwBtsXIAcrN2AHW2egB7s34Aebl+AF+4
        hgBgqoAAYbmKAGS7iwBjuYwAZruOAGm6jgB/t4IAfLqAAH29ggB/vYQAfsCEAIK2hQCBvoYAg7+IAIKu
        kgCHsZYAgcCGAITBiQCHw40AicSOAIvFkQCMx5EAjciSAI/JlACUwpYAkMqWAJLMlwCTzJgAlc2aAJvN
        nwCW1p0AmNefAJvXoQCa2KEAnNiiAJ7ZpACP07AAlNKxAJHWsACU1LMAm9S1AKLJpACj0KYAoNqmAKrS
        rQCi26gAotypAKncrgCu1LEAqt6wAK3fsgCu37QAtt66AK/gtQCw4bUAuebQAMPnyADd7t8A2fPdAPf8
        +AD///8Aef9xAJj/kQC1/7EA1P/RAP///wAAAAAAFC8AACJQAAAwcAAAPZAAAEywAABZzwAAZ/AAAHj/
        EQCK/zEAnP9RAK7/cQDA/5EA0v+xAOT/0QD///8AAAAAACYvAABAUAAAWnAAAHSQAACOsAAAqc8AAMLw
        AADR/xEA2P8xAN7/UQDj/3EA6f+RAO//sQD2/9EA////AAAAAAAvJgAAUEEAAHBbAACQdAAAsI4AAM+p
        AADwwwAA/9IRAP/YMQD/3VEA/+RxAP/qkQD/8LEA//bRAP///wAAAAAALxQAAFAiAABwMAAAkD4AALBN
        AADPWwAA8GkAAP95EQD/ijEA/51RAP+vcQD/wZEA/9KxAP/l0QD///8AAAAAAC8DAABQBAAAcAYAAJAJ
        AACwCgAAzwwAAPAOAAD/IBIA/z4xAP9cUQD/enEA/5eRAP+2sQD/1NEA////AAAAAAAvAA4AUAAXAHAA
        IQCQACsAsAA2AM8AQADwAEkA/xFaAP8xcAD/UYYA/3GcAP+RsgD/scgA/9HfAP///wAAAAAALwAgAFAA
        NgBwAEwAkABiALAAeADPAI4A8ACkAP8RswD/Mb4A/1HHAP9x0QD/kdwA/7HlAP/R8AD///8AAAAAACwA
        LwBLAFAAaQBwAIcAkAClALAAxADPAOEA8ADwEf8A8jH/APRR/wD2cf8A95H/APmx/wD70f8A////AAAA
        AAAbAC8ALQBQAD8AcABSAJAAYwCwAHYAzwCIAPAAmRH/AKYx/wC0Uf8AwnH/AM+R/wDcsf8A69H/AP//
        /wAAAAAACAAvAA4AUAAVAHAAGwCQACEAsAAmAM8ALADwAD4R/wBYMf8AcVH/AIxx/wCmkf8Av7H/ANrR
        /wD///8AAAAAGwAAAAAAACwEAQQsAAAANhMWCgAAAC0HIUMhBywAACVSFRoKKQADHx1aHSICAEo7GDNN
        GgsaBUZaWlpDAQAcGjdPPk0aEQlCRFogIgJOJjpQGDxATRoUHkVVIwgXHDRRST08Ji5PHBIPDgkGAAAl
        NFNJKEhXJE8cDFYaRwAAACY1Uy9ZNlcuTxwMDQAAAAAAKjdTWFlIJkFPHAwAAAAAAAArN1QvKD09QU8l
        EAAAAAAAAC84VEs/GVEwFQAAAAAAAAAALzlUTFMyGAAAAAAAAAAAAAAwOVQ4GgAAAAAAAAAAAAAAADA6
        JwAAAAAAAAAAAAAAAAAAMQAAAAAAAO/BAADDgAAAwIAAAIAAAACAAAAAAAAAAAABAACAAQAAwAMAAOAD
        AADwAQAA+AMAAPwHAAD+DwAA/x8AAP+/AAA=
</value>
  </data>
</root>