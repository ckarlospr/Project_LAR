<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cmdGuardar.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="cmdCancelar.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>