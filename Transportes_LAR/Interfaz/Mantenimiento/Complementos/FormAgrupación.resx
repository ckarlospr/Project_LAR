<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="dataGridViewTextBoxColumn41.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Nombre.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Descripcion.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="estatus.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Eliminar.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAgregar.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        jJTX0mHZpQAAAABJRU5ErkJggg==
</value>
  </data>
</root>