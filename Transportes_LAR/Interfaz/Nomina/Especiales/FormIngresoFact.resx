<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cmdGuardar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABIAAAASCAYAAABWzo5XAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADdQAAA3UAe+RuhUAAAAGYktHRAD/AP8A/6C9p5MAAABidEVYdGNvbW1lbnQAYm9y
        ZGVyIGJzOjAgYmM6IzAwMDAwMCBwczowIHBjOiNlZWVlZWUgZXM6MCBlYzojMDAwMDAwIGNrOjUwMGQw
        MmE0ZjFmMWQ3NDk3MzQwY2M1ODY4OTZiZjExhJ/QAAAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAxMi0xMC0w
        OVQxMDo0OToxOS0wNDowMD3/K+4AAAAldEVYdGRhdGU6bW9kaWZ5ADIwMTItMTAtMDlUMTA6NDk6MTkt
        MDQ6MDBMopNSAAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAABGNJREFUOE9FlHlQ
        lHUYx5dqajgUDSPMsaKJjqExJJTwjwZkTKGpaCYVIVkCZbhhIYYQEIwjDAFhJVaEAJcj1g3kWJAJ0kAJ
        Azn3XWBvWBYWlpc7kMtvP3a36Zn5zO837/F5nud95v0xGCSOOH0Z4u4RnGdj68xiMCwdGUZWjgfesP28
        uqTgNvdWfnlJQR6XV1Z0W/BbVdmDFkFZ7+NHpZl5P3PszrIyTKwP7d9x6IIZmCq8GMnGt6zr28Hshk0/
        buemU9qvW70drRjq7oRU2Iey8iow2XzEcJuxE/UPexFU8Rju8YXt5jb2VjrRaWYCdeRkOHxZOYji3EMw
        7wmOpfPR9Xs9qJ5OqCQU2MUVuFgvgm/NE2BrDRWC+wgo70JYTT9sTwczdSKfkAzqcnYNmJFZYLHr4VvS
        AfvL5ehua4KUGgA9qUR+KQ8WIWU4mi3ABq1GEb8R/pV/I7hmAB+cDfPTic6HXaUSc2rxGfMHvHIqHhZB
        v+C1iEIIu/7EpFIM7YQChZW1YBxPxruxXNAKEW5webjA60Vw/RBsPf8ThWdS8Xl1cPVKhJFDKMx8OURU
        BIWwF9PjMqyvzONuSzv2uITj49BrkPc/QmZxGS7UChEkGMH73pH6irxZWVTcjUa4+afgoCsLB32u4e3A
        bAiaWtDxVzdEMhUoqQI9A/1oe/AH+DU8RGVxENAwjKAWKWx9og2i6BzqO7YAAVeKkFlYgaucCqQVVCLl
        ZjWuFN5BUhEfySW1SOE2IL2qGT/xW5FQLoC/QIyQNiUO+cXqReeicykWuwnJbC4Z7AaZyiqebfyjZ12/
        x+YqsL1O7m8StjEuG4ULj8JXTTK8w4wxiGLzqfD8e7iUyyWOBczOTGJGo9YzvcMUpsleKZNAPCKEWimD
        RDSIvTf78F61GBbnovQiz7gCKozTinh2JUm6jMX5WczPabG4QGOO1mJSPQa1SgHNpApakmR1kYaUCK24
        wzjWPAHLbwwVeSUUUhFF95FYUI3tp0ugZzWgtdOkkknIZCOQjFKQk1bGFFJMEOGCVgP56DCs+Qq4t8/C
        0vd7Q2vJxdTJ1Ls4k8zBs7UlaEkrqjE5Bvt7IBrqg3h4CFLxCJFJdNfnZzRQSEZg2zQFr95lWPrF60Vv
        eacKHZNq4Z1eCmLCytI81ONyTKmVpKoJUp1G3+o8jeXlRdL+GvnYMjh0LCFQvA2rwCS96GWP2CHzT4Pg
        m11FJrKFlblpLNJTWFnQYm15Duury9haJxPcfKqb2E5o1BN4NbtR9GFWdeeBiAy9aP/5HwffDL+FM1l3
        ME4eGBwdhVAqx7ByHKMqNaRTM5DP0FDSC1AtrEC7uo6HlAQ2ddIpxzqh7PXYXP1Pu9vR4/geV2aAsYN7
        iLm9a4TJYedoUzvnWGM750smh10STT9ySTQ7eiJhl9OpuN2ffBGz78TXrH1unuFWoWmB1jFZ/nvdPP8/
        k3RGBsOI8DzhRYIxwYywayeXYTUl60uEFwjPGd7RLf8CQ9cmgr6TkSUAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>