<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="timerMensaje.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAABXIAAAHwCAYAAAALhZdYAAAAAXNSR0ICQMB9xQAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAFxEAABcRAcom8z8AAAAZdEVYdFNvZnR3YXJlAE1pY3Jvc29mdCBPZmZpY2V/7TVx
        AAAWT0lEQVR4Xu3dPXhc1Z3H8VO6dOmSMiWlS0pKl5SUW7qktCuXrvbxClkY8uYsu6yTGHksRHB4iyFA
        DIFgwB6PkWdGgt21dzOSVWrPNSuQ5GPjF8n6BX+Kz/85OnN1586U3+c+d8rhw4ejTPXG+6dmF56emr12
        6PnZhWPPnxme22jq1eHq87PDNQAAAACAB7alO/7L7OhE1ySnegsHpk8vPNVql7upufkoddF2enZ0pH5J
        F5pfKAAAAADArrh2sbvZtIu7Uy/397b65qPS3NxJU/P9PdOzC8/UL+FU+8sBAAAAAAh0Znhuenb47G5E
        3ebmTpjqjZ88Pjs6UT/wjfph1wAAAAAA/lEdPzM6+SgfwdDc3E5Tp/v7ps8sHJs+Uz8gAAAAAMBPSW/U
        625ibbXR7dTc3A7d7cXTt36wbLja/IAAAAAAAD8R3R26/9wbP9FqpduhufmwpnvDg9NnRoutDwQAAAAA
        8FP0/ze1Ht2JZ+g2Nx/UzOzC09Oz1y5u/QAAAAAAAI+L5890vxO28FyroT6o5uaD6C6sddEAAAAAAI+j
        589cOzU139/T6qn3q7l5P7oL6Z7/cLxeGAAAAAAAG127MLMNz85tbt6rqdP9fd2FtC8QAAAAAIDu98Sm
        euP9rcZ6r5qb96J74+4CWhcGAAAAAMAPpmeHqzO9hWdarfVeNDd/TPeG02eGq8d79SIAAAAAALgnM73R
        kVZz/THNzbvpIm7rAgAAAAAA+HHTZ4dHW+31bpqbd/Ld4xTciQsAAAAA8DBmesNnWw32TpqbLd0vq033
        RoutNwUAAAAA4N51N8zezw+gNTe3mnq5v/f42dGFmd6oe4YDAAAAAAAP6XhvtNjdQNtqsls1N7eqJ+1t
        fRMAAAAAAB5OdwPt1Hx/T6vLbtTc3Gj67Pho6w0AAAAAANgGZ6+darXZjZqb67oH7s6c7U4EAAAAAMCO
        6Y0OtRrtuuZmp7ud9/jZ0WLzpAAAAAAAbJvjvdHq1On+vlar7TQ3OzO9hedaJwQAAAAAYCeMj7Vabae5
        2ZXfmd5o9YX6zwAAAAAAPBoz8+MnW832to3Oibnx0dZJAAAAAADYOTNz7R8+u21jpjd+wt24AAAAAAC7
        Y6Y33r+12276o9MV39Y/AwAAAACw846fHV3Y2m03/dE9f6H1jwAAAAAAPDozc+MDG9vt5pA7Nzr5wlw9
        EAAAAACA3XR+Y7v9fjE139/zwtnR6ol6EAAAAAAAu6v7PbPbQu6J3vDZ1sEAAAAAAOyKQ7eF3BdeG59r
        HAgAAAAAwC54YW442BRyp+b7e1sHAgAAAACwe2bmx09+H3JPzI0PtA4CAAAAAGA3DQ9uDLlH2wcBAAAA
        ALBbZuaunfo+5L44Nxy8WDcBAAAAAAhydrQ6Nd/fU6ZO9/c1DwAAAAAAYNfN9Mb7y8z8eP+Lr9UNAAAA
        AADinJgbPlNOzA+fbb0IAAAAAMDuOzE3OlRemhsfab0IAAAAAECEk6UbWzYBAAAAAEgxNzpffv7a+NxL
        9Q8AAAAAABINB0IuAAAAAEC04aB0o/0iAAAAAAAJhFwAAAAAgHDlpbnRausFAAAAAAAylNYmAAAAAAA5
        hFwAAAAAgHDl5/PjNQAAAAAAcgm5AAAAAADhhFwAAAAAgHBCLgAAAABAOCEXAAAAACCckAsAAAAAEK78
        og4AAAAAAHIJuQAAAAAA4YRcAAAAAIBwQi4AAAAAQLjyi9frAgAAAACAWEIuAAAAAEC48ss6AAAAAADI
        JeQCAAAAAIQTcgEAAAAAwgm5AAAAAADhhFwAAAAAgHBCLgAAAABAuPKrOgAAAAAAyFV+9Ye6AAAAAAAg
        lpALAAAAABBOyAUAAAAACCfkAgAAAACEE3IBAAAAAMKVX9cBAAAAAEAuIRcAAAAAIJyQCwAAAAAQrvz6
        jboAAAAAACCWkAsAAAAAEE7IBQAAAAAIJ+QCAAAAAIQrJ99YXAMAAAAAIJeQCwAAAAAQTsgFAAAAAAhX
        Tp6rCwAAAAAAYgm5AAAAAADhhFwAAAAAgHDlN3UAAAAAAJBLyAUAAAAACCfkAgAAAACEE3IBAAAAAMIJ
        uQAAAAAA4cpv/lgXAAAAAADEKv9aBwAAAAAAuYRcAAAAAIBwQi4AAAAAQDghFwAAAAAgnJALAAAAABBO
        yAUAAAAACFdergMAAAAAgFxCLgAAAABAuPLym3UBAAAAAEAsIRcAAAAAIJyQCwAAAAAQrrz85lJdAAAA
        AACQqvxbHQAAAAAA5BJyAQAAAADCCbkAAAAAAOGEXAAAAACAcEIuAAAAAEA4IRcAAAAAIJyQCwAAAAAQ
        rvz7W0trAAAAAADkEnIBAAAAAMIJuQAAAAAA4YRcAAAAAIBwQi4AAAAAQDghFwAAAAAgXHmlDgAAAAAA
        cpVX3vqmLgAAAAAASCXkAgAAAACEE3IBAAAAAMKVV96uCwAAAAAAYgm5AAAAAADhyn/UAQAAAABALiEX
        AAAAACCckAsAAAAAEE7IBQAAAAAIJ+QCAAAAAIQTcgEAAAAAwpVTdQAAAAAAkKuceqcuAAAAAACIJeQC
        AAAAAIQTcgEAAAAAwgm5AAAAAADhhFwAAAAAgHDlt3UAAAAAAJBLyAUAAAAACCfkAgAAAACEK799ty4A
        AAAAAIgl5AIAAAAAhBNyAQAAAADCCbkAAAAAAOHK7979dg0AAAAAgFxCLgAAAABAOCEXAAAAACBc+d2f
        6gIAAAAAgFhCLgAAAABAOCEXAAAAACBc+X0dAAAAAADkEnIBAAAAAMIJuQAAAAAA4YRcAAAAAIBwQi4A
        AAAAQLjy+/N1AQAAAABArHK6DgAAAAAAcgm5AAAAAADhhFwAAAAAgHBCLgAAAABAOCEXAAAAACCckAsA
        AAAAEK68WgcAAAAAALmEXAAAAACAcOXV9+oCAAAAAIBYQi4AAAAAQDghFwAAAAAgnJALAAAAABCuzNYB
        AAAAAEAuIRcAAAAAIJyQCwAAAAAQTsgFAAAAAAgn5AIAAAAAhBNyAQAAAADCCbkAAAAAAOHKmff/cw0A
        AAAAgFxCLgAAAABAOCEXAAAAACCckAsAAAAAEE7IBQAAAAAIJ+QCAAAAAIQrvToAAAAAAMgl5AIAAAAA
        hBNyAQAAAADCCbkAAAAAAOFK7891AQAAAABALCEXAAAAACBcOVsHAAAAAAC5hFwAAAAAgHBCLgAAAABA
        OCEXAAAAACCckAsAAAAAEE7IBQAAAAAIV+bqAAAAAAAgV5n7oC4AAAAAAIgl5AIAAAAAhBNyAQAAAADC
        CbkAAAAAAOGEXAAAAACAcOW1OgAAAAAAyCXkAgAAAACEE3IBAAAAAMKV1z6sCwAAAAAAYgm5AAAAAADh
        hFwAAAAAgHBCLgAAAABAuDL/4X+tAQAAAACQS8gFAAAAAAgn5AIAAAAAhCvzH9UFAAAAAACxhFwAAAAA
        gHBCLgAAAABAuPJ6HQAAAAAA5BJyAQAAAADCCbkAAAAAAOGEXAAAAACAcEIuAAAAAEC48vpf6gIAAAAA
        gFjlD3UAAAAAAJBLyAUAAAAACCfkAgAAAACEE3IBAAAAAMIJuQAAAAAA4YRcAAAAAIBw5Y06AAAAAADI
        JeQCAAAAAIQrb1yoCwAAAAAAYgm5AAAAAADhhFwAAAAAgHBCLgAAAABAuHKuDgAAAAAAcgm5AAAAAADh
        hFwAAAAAgHBCLgAAAABAOCEXAAAAACCckAsAAAAAEE7IBQAAAAAIV/748X+vAQAAAACQS8gFAAAAAAgn
        5AIAAAAAhBNyAQAAAADCCbkAAAAAAOGEXAAAAACAcOXNOgAAAAAAyCXkAgAAAACEE3IBAAAAAMIJuQAA
        AAAA4cqbn9QFAAAAAACxhFwAAAAAgHDlrToAAAAAAMgl5AIAAAAAhBNyAQAAAADCCbkAAAAAAOGEXAAA
        AACAcEIuAAAAAEA4IRcAAAAAIFx5uw4AAAAAAHKVt/9aFwAAAAAAxBJyAQAAAADCCbkAAAAAAOGEXAAA
        AACAcEIuAAAAAEA4IRcAAAAAIJyQCwAAAAAQrrxTBwAAAAAAuYRcAAAAAIBwQi4AAAAAQDghFwAAAAAg
        XHnn0+trAAAAAADkEnIBAAAAAMIJuQAAAAAA4cq7dQAAAAAAkEvIBQAAAAAIJ+QCAAAAAIQTcgEAAAAA
        wgm5AAAAAADhhFwAAAAAgHBCLgAAAABAuPLuZ3UBAAAAAECs8qc6AAAAAADIJeQCAAAAAIQTcgEAAAAA
        wgm5AAAAAADhhFwAAAAAgHBCLgAAAABAOCEXAAAAACCckAsAAAAAEK6crwMAAAAAgFzl/N/qAgAAAACA
        WEIuAAAAAEA4IRcAAAAAIJyQCwAAAAAQTsgFAAAAAAgn5AIAAAAAhBNyAQAAAADClffqAAAAAAAgl5AL
        AAAAABBOyAUAAAAACCfkAgAAAACEK+99fmMNAAAAAIBcQi4AAAAAQDghFwAAAAAgXHm/DgAAAAAAcgm5
        AAAAAADhhFwAAAAAgHBCLgAAAABAOCEXAAAAACCckAsAAAAAEE7IBQAAAAAIV96/WBcAAAAAAMQqf64D
        AAAAAIBcQi4AAAAAQDghFwAAAAAgnJALAAAAABBOyAUAAAAACCfkAgAAAACEE3IBAAAAAMIJuQAAAAAA
        4coHdQAAAAAAkKt88EVdAAAAAAAQS8gFAAAAAAgn5AIAAAAAhBNyAQAAAADCCbkAAAAAAOGEXAAAAACA
        cEIuAAAAAEC48mEdAAAAAADkEnIBAAAAAMIJuQAAAAAA4YRcAAAAAIBw5cMv/2cNAAAAAIBcQi4AAAAA
        QDghFwAAAAAgXPmoDgAAAAAAcgm5AAAAAADhhFwAAAAAgHBCLgAAAABAOCEXAAAAACCckAsAAAAAEE7I
        BQAAAAAIVz76qi4AAAAAAIhV/lIHAAAAAAC5hFwAAAAAgHBCLgAAAABAOCEXAAAAACCckAsAAAAAEE7I
        BQAAAAAIJ+QCAAAAAIQTcgEAAAAAwpULdQAAAAAAkKtcuFQXAAAAAADEEnIBAAAAAMIJuQAAAAAA4YRc
        AAAAAIBwQi4AAAAAQDghFwAAAAAgnJALAAAAABCufFwHAAAAAAC5hFwAAAAAgHBCLgAAAABAOCEXAAAA
        ACBc+fjy/64BAAAAAJBLyAUAAAAACCfkAgAAAACEK5/UAQAAAABALiEXAAAAACCckAsAAAAAEE7IBQAA
        AAAIJ+QCAAAAAIQTcgEAAAAAwgm5AAAAAADhyif9ugAAAAAAIFb5ax0AAAAAAOQScgEAAAAAwgm5AAAA
        AADhhFwAAAAAgHBCLgAAAABAOCEXAAAAACCckAsAAAAAEE7IBQAAAAAIJ+QCAAAAAIQrn9YBAAAAAEAu
        IRcAAAAAIJyQCwAAAAAQrnx6pS4AAAAAAIgl5AIAAAAAhBNyAQAAAADCCbkAAAAAAOGEXAAAAACAcEIu
        AAAAAEA4IRcAAAAAIJyQCwAAAAAQrnx25e9rAAAAAADkEnIBAAAAAMIJuQAAAAAA4YRcAAAAAIBwQi4A
        AAAAQDghFwAAAAAgnJALAAAAABCufDaoCwAAAAAAYgm5AAAAAADhhFwAAAAAgHDlb3UAAAAAAJBLyAUA
        AAAACCfkAgAAAACEE3IBAAAAAMIJuQAAAAAA4YRcAAAAAIBwQi4AAAAAQDghFwAAAAAgnJALAAAAABCu
        fF4HAAAAAAC5yudX6wIAAAAAgFhCLgAAAABAOCEXAAAAACCckAsAAAAAEE7IBQAAAAAIJ+QCAAAAAIQT
        cgEAAAAAwpWLdQAAAAAAkEvIBQAAAAAIJ+QCAAAAAIQTcgEAAAAAwpWLX0/WAAAAAADIJeQCAAAAAIQT
        cgEAAAAAwpUv6gAAAAAAIJeQCwAAAAAQTsgFAAAAAAgn5AIAAAAAhBNyAQAAAADCCbkAAAAAAOGEXAAA
        AACAcOWLhboAAAAAACBW+bIOAAAAAAByCbkAAAAAAOGEXAAAAACAcEIuAAAAAEA4IRcAAAAAIJyQCwAA
        AAAQTsgFAAAAAAgn5AIAAAAAhCtf1QEAAAAAQK7y1bW6AAAAAAAglpALAAAAABBOyAUAAAAACCfkAgAA
        AACEE3IBAAAAAMIJuQAAAAAA4YRcAAAAAIBw5VIdAAAAAADkEnIBAAAAAMIJuQAAAAAA4YRcAAAAAIBw
        5dJweQ0AAAAAgFxCLgAAAABAuPLlaLLYegEAAAAAgAzl8nB5UK0BAAAAAJCp9K9NLrReAAAAAABg910a
        TRa7O3LPbX0BAAAAAIAYg3J59Pde4wUAAAAAAAJ0T1Uo/eHy0daLAAAAAAAEuDY5VS4NVw42XwQAAAAA
        YNddGt08UvoLK0+3XgQAAAAAYPddGk7+qXw5nvzs8qhuAAAAAAAQ59LC5Kly+PDhUv+40a8bAAAAAACE
        6V/feyvk1j9O3vYiAAAAAAC76vJocr5ruN+F3OHKs62DAAAAAADYTZNDP4Tc8eoT7YMAAAAAANgt3fNx
        vw+5nUvD5YutAwEAAAAAePRu/bZZf23PppDbX5g81zoYAAAAAIBdMJ4cW++3P4Rcj1cAAAAAAIix/liF
        TSG3c2W8fK71DwAAAAAAPDqXh8uDje12U8jtjycHrtSDAAAAAADYPf3hysGN7XZTyO30x5MLV8b1YAAA
        AAAAHrn+aLK4/iNn6zZF3E5/vPJ0658BAAAAANh5/fHmu3E7m/5Y1x9PTrVOAAAAAADAzumemLD1btzO
        pj/W9cerT7ZOAgAAAADAzul+x6zVbG/bWNdfnBxrnQgAAAAAgO3X3Y3barWd5manf311X/3H1dYJAQAA
        AADYXv3xZH+r1Xaam+sG45tHWicEAAAAAGD79MeTU61Gu665ua57qG49yblBPREAAAAAANvvymh50O9f
        39tqtOuamxt1J+hO1HoDAAAAAAAe3JXx8o3+ePKzVpvdqLm5VXei7oStNwIAAAAA4EGtPN1qsls1N1u6
        E7bfCAAAAACA+zd5rtViW5qbdzIYrxwcLK6sAQAAAADw4PpLyydbDfZOmpt301+cHGu9MQAAAAAAP+7K
        aHK+31/b0+qvd9LcvJvuDbpa3LoAAAAAAADu7LuIe31vq73eTXPzXtQ3PXS1vjEAAAAAAPdgafnk/d6J
        u665ea8G45UDVxeXV5sXBQAAAADALYPxyj3/sFlLc/N+9MerT14dLw9aFwcAAAAA8FhbWrnR3RDbaqv3
        o7l5v/rXV/ddHU3ONy8UAAAAAOBxNF4edDfCtprq/WpuPoju2Q5fL9082rxgAAAAAIDHS+9BftTsTpqb
        D+PWoxbqRW65aAAAAACAn76llQuD8eSpVjt9GM3N7dBdrMctAAAAAACPhfHyYDCcPNNqpduhubmdBksr
        B64uLQ+uLtUPAwAAAADwU7K4sjhYWjnYPXq21Ue3S3NzJ3Qf5uul5cHX9cMBAAAAAPxDW1xZrA71r2/f
        c3Dvprm5k/rfru5f+GZyrH7YG7d9eAAAAACAWMurC9+snOieQtBqnzupufmodM/RvbZ088jC4uR8+4sB
        AAAAANhNNy8ufHvzaBdvd/rxCXfT3NwN3S3IXditX8hzt+Lu0s1z3ZfU/vIAAAAAALbT8qBrkl207R6Z
        0LXK/vXVfa2W+egdLv8HvTuqUoS722QAAAAASUVORK5CYII=
</value>
  </data>
</root>