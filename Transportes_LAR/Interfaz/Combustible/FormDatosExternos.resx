<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cmdGuardar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABIAAAASCAYAAABWzo5XAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADdAAAA3QARBsPQcAAAAGYktHRAD/AP8A/6C9p5MAAABidEVYdGNvbW1lbnQAYm9y
        ZGVyIGJzOjAgYmM6IzAwMDAwMCBwczowIHBjOiNlZWVlZWUgZXM6MCBlYzojMDAwMDAwIGNrOjUwMGQw
        MmE0ZjFmMWQ3NDk3MzQwY2M1ODY4OTZiZjExhJ/QAAAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAxMi0xMC0w
        OVQxMDo0OToxOS0wNDowMD3/K+4AAAAldEVYdGRhdGU6bW9kaWZ5ADIwMTItMTAtMDlUMTA6NDk6MTkt
        MDQ6MDBMopNSAAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAABGFJREFUOE9FlHtQ
        VGUYh5dqargIGkaYY0UTXYbGkFDCPxqQMZWmoplUhGQ3UIY7LMRsCAjGJQwBYSVWhACXS6wbyGVBJkgD
        JQzkumeBvcOysLAstyWQm78+2G36zTxzvvnOmed73/POObTtHHb9MtTTKyTP3sGNSaPZuNBMbF32v+Hw
        eXVJwW3urfzykoI8Lq+s6Lbgt6qyBy2Cst7Hj0oz837mOJ5lZpjZHdy3I9kOPShVeDGKjW+Z17dC2A0b
        /tzODde0Xzd7O1ox1N0JqbAPZeVVoLP5iOU2Yzv1D3sRXPEYnvGF7Vb2TrY7otP0BOrwiQgwmDmI5txD
        CO8Jjqbz0fV7PaieTqgkFNjFFbhYLwKj5gmwuYoKwX0ElnchvKYfDqdD6Dsiv9AM6nJ2DehRWWCy68Eo
        6YDT5XJ0tzVBSg1AN6lEfikP1qFlOJItwLpOjSJ+IwIq/0ZIzQA+OBvuvyM6H36VSsypxWf0H/DKyXhY
        B/+C1yILIez6E5NKMbQTChRW1oJ2LBnvsrjQKUS4weXhAq8XIfVDcPD+TxSRScXn1cHDJxEmzmGwYHCI
        qAgKYS+mx2VYW57H3ZZ27HaPwMdh1yDvf4TM4jJcqBUiWDCC932jDCJfZhYVd6MRpwJScMCDiQN+1/B2
        UDYETS3o+KsbIpkKlFSBnoF+tD34A/waHqKzOAhsGEZwixQOfjFGUUwO9R1bgMArRcgsrMBVTgXSCiqR
        crMaVwrvIKmIj+SSWqRwG5Be1Yyf+K1IKBcgQCBGaJsSB/1ZBtG5mFyKyW5CMptLBrtOprKCZ+v/GFgz
        rLGxAmytkfsbhC2My0bhzqPwVZMM79BjjSJWPhWRfw+XcrnEsYDZmUnMaNQGpreZwjRZK2USiEeEUCtl
        kIgGsedmH96rFsP6XLRB5B1XQIVzWhHPriSH6rE4P4v5OS0WF3SY02kxqR6DWqWAZlIFLTlkZVEHKRHa
        codxtHkCNt8YK/JJKKQii+4jsaAaW0+XoJvVQKedJpVMQiYbgWSUgpy0MqaQYoIIF7QayEeHYcdXwLN9
        FjaM742tJRdTJ1Lv4kwyB89Wl6AlrajG5Bjs74FoqA/i4SFIxSNEJtnZn5/RQCEZgUPTFHx69bDxjzeI
        3vJNFbok1cI3vRTEhOWleajH5ZhSK0lVE6Q6jaHVeR30+kXS/ip52TI4dywhSLwF26Akg+hlL9aQ1afB
        YGRXkYlsYnluGou6KSwvaLGqn8Paih6ba2SCG093JrYdjXoCr2Y3ij7Mqu7cH5lhEO07/+PgmxG3cCbr
        DsbJA4OjoxBK5RhWjmNUpYZ0agbyGR2UugWoFpahXVnDQ0oC+zrplEudUPY6K9fw0Vq6eB3b7UEPNHX2
        DLVy8og0O+QWY+7oxjJ1dLtkdsg90fwj90SLI8cTdrmejLP85IvYvce/Zu495R1hG5YWZBebFbDnlPf/
        /yRjTAjPE14kmBIsCLsIlsarOeElwguE5wjG0Gj/AkPXJoLUU31bAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>